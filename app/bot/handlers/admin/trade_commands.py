# app/bot/handlers/admin/trade_commands.py - –ù–û–í–´–ô –§–ê–ô–õ
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from app.core.config import settings
from app.services.smart_trade_generator import generate_smart_trade, get_current_day_stats
from app.services.yield_finalization import finalize_daily_yield
from app.bot.handlers.trades import post_last_trade
from app.bot.handlers.yield_report import post_daily_yield

router = Router()


@router.message(Command("trade_now"))
async def cmd_trade_now(msg: Message):
    """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–π–¥ —Å–µ–π—á–∞—Å"""
    if msg.from_user.id not in settings.ADMIN_TG_IDS:
        return

    await msg.answer("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç—Ä–µ–π–¥...")

    try:
        trade_id = generate_smart_trade()

        if trade_id:
            await post_last_trade(msg.bot)
            await msg.answer(f"‚úÖ –¢—Ä–µ–π–¥ #{trade_id} —Å–æ–∑–¥–∞–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω")
        else:
            await msg.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç—Ä–µ–π–¥")

    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")


@router.message(Command("trade_stats"))
async def cmd_trade_stats(msg: Message):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –¥–Ω—è"""
    if msg.from_user.id not in settings.ADMIN_TG_IDS:
        return

    try:
        stats = get_current_day_stats()
        target_min, target_max = settings.DAILY_YIELD_RANGE

        if stats['is_active']:
            status = "üü¢ –ê–ö–¢–ò–í–ï–ù"
            if target_min <= stats['current_yield'] <= target_max:
                yield_status = "‚úÖ –í –î–ò–ê–ü–ê–ó–û–ù–ï"
            elif stats['current_yield'] < target_min:
                yield_status = f"‚ö†Ô∏è –ù–ò–ñ–ï ({target_min - stats['current_yield']:.2f}%)"
            else:
                yield_status = f"‚ö†Ô∏è –í–´–®–ï (+{stats['current_yield'] - target_max:.2f}%)"
        else:
            status = "üî¥ –ù–ï–ê–ö–¢–ò–í–ï–ù"
            yield_status = "‚Äî"

        report = (
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –¥–Ω—è</b>\n\n"
            f"üîÑ <b>–°—Ç–∞—Ç—É—Å:</b> {status}\n"
            f"üí∞ <b>–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</b> {stats['current_yield']:.2f}%\n"
            f"üéØ <b>–¶–µ–ª–µ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω:</b> {target_min}-{target_max}%\n"
            f"üìà <b>–°—Ç–∞—Ç—É—Å:</b> {yield_status}\n"
            f"üìä <b>–¢—Ä–µ–π–¥–æ–≤:</b> {stats['trades_count']}\n"
            f"‚è∞ <b>–í—Ä–µ–º–µ–Ω–∏ –¥–æ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏:</b> {stats['hours_left']:.1f}—á"
        )

        await msg.answer(report, parse_mode="HTML")

    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")


@router.message(Command("yield_finalize"))
async def cmd_yield_finalize(msg: Message):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏"""
    if msg.from_user.id not in settings.ADMIN_TG_IDS:
        return

    await msg.answer("üîÑ –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å...")

    try:
        yield_pct = finalize_daily_yield()

        if yield_pct is not None:
            success = await post_daily_yield(msg.bot)

            if success:
                await msg.answer(f"‚úÖ –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {yield_pct}%")
            else:
                await msg.answer(f"‚ö†Ô∏è –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∞–Ω–∞ ({yield_pct}%), –Ω–æ –æ—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞")
        else:
            await msg.answer("‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏")

    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")